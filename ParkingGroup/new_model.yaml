ParkingGroup:
  description: 'Parking Group '
  properties:
    allowedVehicleType:
      description: 'Vehicle type allowed (a parking group only allows one vehicle type). Enum:''bicycle, bus, car, caravan, motorcycle, motorscooter, truck'' '
      enum:
        - bicycle
        - bus
        - car
        - caravan
        - motorcycle
        - motorscooter
        - truck
      type: Property
      x-ngsi:
        model: http://schema.org/Text
    alternateName:
      description: 'An alternative name for this item'
      type: Property
    areBordersMarked:
      description: 'Denotes whether parking spots are delimited (with blank lines or similar) or not. Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined'
      type: Property
      x-ngsi:
        model: https://schema.org/Boolean
    availableSpotNumber:
      description: 'The number of spots available in this group. It must lower or equal than `totalSpotNumber`.'
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/Number
    averageSpotLength:
      description: 'The average length of parking spots. Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined.'
      exclusiveMinimum: 0
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/length
        units: meters
    averageSpotWidth:
      description: 'The average width of parking spots. Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined.'
      exclusiveMinimum: 0
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/width
        units: meters
    category:
      description: 'Parking Group''s category. Enum:''adjacentSpaces, blueZone, completeFloor, free, feeCharged, greenZone, loadUnloadZone, nonAdjacentSpaces, offStreet, onlyDisabled, onlyElectricalCharging, onlyResidents, onlyWithPermit, onStreet, particularConditionsSpaces, shortTermMediumTermLongTerm, statisticsOnly, vehicleTypeSpaces'''
      items:
        enum:
          - adjacentSpaces
          - blueZone
          - completeFloor
          - free
          - feeCharged
          - greenZone
          - loadUnloadZone
          - nonAdjacentSpaces
          - offStreet
          - onlyDisabled
          - onlyElectricalCharging
          - onlyResidents
          - onlyWithPermit
          - onStreet
          - particularConditionsSpaces
          - shortTermMediumTermLongTerm
          - statisticsOnly
          - vehicleTypeSpaces
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/Text
    chargeType:
      description: 'Type of charge(s) performed by the parking site. Enum:''additionalIntervalPrice, annualPayment, firstIntervalPrice, flat, free, minimum, maximum, monthlyPayment, seasonTicket, temporaryFee, temporaryPrice, unknown, other'''
      items:
        enum:
          - additionalIntervalPrice
          - annualPayment
          - firstIntervalPrice
          - flat
          - free
          - minimum
          - maximum
          - monthlyPayment
          - seasonTicket
          - temporaryFee
          - temporaryPrice
          - unknown
          - other
        type: string
      type: Property
    dataProvider:
      description: 'A sequence of characters identifying the provider of the harmonised data entity.'
      type: Property
    dateCreated:
      description: 'Entity creation timestamp. This will usually be allocated by the storage platform.'
      format: date-time
      type: Property
    dateModified:
      description: 'Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.'
      format: date-time
      type: Property
    description:
      description: 'A description of this item'
      type: Property
    id:
      anyOf: &parkinggroup_-_properties_-_owner_-_items_-_anyof
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Unique identifier of the entity'
      type: Property
    maximumAllowedHeight:
      description: 'Maximum allowed height for vehicles.  Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined.'
      exclusiveMinimum: 0
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/heigth
        units: meters
    maximumAllowedWidth:
      description: 'Maximum allowed width for vehicles. Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined.'
      exclusiveMinimum: 0
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/width
        units: Meters
    maximumParkingDuration:
      description: 'Maximum allowed stay encoded as a ISO8601 duration. When non present or equals to the empty string it means indefinite. Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined.'
      format: date-time
      type: Property
    name:
      description: 'The name of this item.'
      type: Property
    occupancyDetectionType:
      description: 'Allowed values: The following from DATEX II version 2.3 _OccupancyDetectionTypeEnum_. Enum:''balancing, manual, modelBased, none, singleSpaceDetection''. Or any other application-specific'
      items:
        enum:
          - balancing
          - manual
          - modelBased
          - none
          - singleSpaceDetection
        type: string
      minItems: 1
      type: Property
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
    owner:
      description: 'A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)'
      items:
        anyOf: *parkinggroup_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: Property
    parkingMode:
      description: 'Parking mode(s). Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined. Allowed values: Those defined by the DATEX II version 2.3 _ParkingModeEnum_ enumeration. Enum:''echelonParking, parallelParking, perpendicularParking'''
      items:
        enum:
          - echelonParking
          - parallelParking
          - perpendicularParking
        type: string
      minItems: 1
      type: Property
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
    permitActiveHours:
      description: 'This attribute allows to capture situations when a permit is only needed at specific hours or days of week. It is an structured value which must contain a subproperty per each required permit, indicating when the permit is active. If nothing specified for a permit it will mean that a permit is always required. Empty object means always active. The syntax must be conformant with schema.org [opening hours specification](https://schema.org/openingHours). For instance, a blue zone which is only active on dayweeks will be encoded as ''blueZonePermit'': ''Mo,Tu,We,Th,Fr,Sa 09:00-20:00''. Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined'
      type: Property
      x-ngsi:
        model: https://schema.org/openingHours
    refParkingSite:
      anyOf:
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Parking site to which this zone belongs to. A group cannot be orphan. A group cannot have subgroups. Reference to an OffStreetParking or to an OnStreetParking'
      type: Relationship
    refParkingSpot:
      anyOf:
        - maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - format: uri
          type: string
      description: 'Individual parking spots belonging to this parking group.'
      type: Relationship
    requiredPermit:
      description: 'This attribute captures what permit(s) might be needed to park at this site. Semantics is that at least _one of_ these permits is needed to park. When a permit is composed by more than one item (and) they can be combined with a '',''. For instance ''residentPermit,disabledPermit'' stays that both, at the same time, a resident and a disabled permit are needed to park. If list is empty, no permit is needed'
      items:
        enum:
          - employeePermit
          - studentPermit
          - fairPermit
          - governmentPermit
          - residentPermit
          - specificIdentifiedVehiclePermit
          - disabledPermit
          - visitorPermit
          - blueZonePermit
          - careTakingPermit
          - carpoolingPermit
          - carSharingPermit
          - emergencyVehiclePermit
          - maintenanceVehiclePermit
          - roadWorksPermit
          - taxiPermit
          - transportationPermit
          - noPermitNeeded
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/Text
    reservationType:
      description: 'Conditions for reservation. Applications _SHOULD_ inspect the value of this property at parent''s level if it is not defined. Enum:''mandatory, notAvailable, optional, partly''.'
      enum:
        - mandatory
        - notAvailable
        - optional
        - partly
      type: Property
    seeAlso:
      description: 'list of uri pointing to additional resources about the item'
      oneOf:
        - items:
            - format: uri
              type: string
          minItems: 1
          type: array
        - format: uri
          type: string
      type: Property
    source:
      description: 'A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.'
      type: Property
    totalSpotNumber:
      description: 'The total number of spots pertaining to this group. Allowed values: Any positive integer number or 0. Normative references: DATEX 2 version 2.3 attribute _parkingNumberOfSpaces_ of the _ParkingRecord_ class.'
      minimum: 1
      type: Property
      x-ngsi:
        model: http://schema.org/Number
    type:
      description: 'NGSI Entity type. It has to be ParkingGroup'
      enum:
        - ParkingGroup
      type: Property
  required:
    - id
    - type
    - refParkingSite
  type: object
