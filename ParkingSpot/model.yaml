ParkingSpot:
  description: 'A parking spot is an area well delimited where one vehicle can be parked.'
  properties:
    TimeInstant:
      description: 'Timestamp saved by FIWARE''s IoT Agent. There can be production environments where the attribute type is equal to the `ISO8601` string. If so, it must be considered as a synonym of `DateTime`. Note: This attribute has not been harmonized to keep backwards compatibility with current FIWARE reference implementations.'
      format: date-time
      type: Property
    address:
      description: 'The mailing address'
      properties:
        addressCountry:
          description: 'Property. The country. For example, Spain. Model:''https://schema.org/addressCountry'''
          type: string
        addressLocality:
          description: 'Property. The locality in which the street address is, and which is in the region. Model:''https://schema.org/addressLocality'''
          type: string
        addressRegion:
          description: 'Property. The region in which the locality is, and which is in the country. Model:''https://schema.org/addressRegion'''
          type: string
        areaServed:
          description: 'Property. The geographic area where a service or offered item is provided. Model:''https://schema.org/areaServed'''
          type: string
        postOfficeBoxNumber:
          description: 'Property. The post office box number for PO box addresses. For example, 03578. Model:''https://schema.org/postOfficeBoxNumber'''
          type: string
        postalCode:
          description: 'Property. The postal code. For example, 24004. Model:''https://schema.org/https://schema.org/postalCode'''
          type: string
        streetAddress:
          description: 'Property. The street address. Model:''https://schema.org/streetAddress'''
          type: string
      type: Property
      x-ngsi:
        model: https://schema.org/address
    alternateName:
      description: 'An alternative name for this item'
      type: Property
    annotations:
      description: 'Annotations about the item'
      items:
        type: string
      type: Property
      x-ngsi:
        model: https://schema.org/Text
    areaServed:
      description: 'The geographic area where a service or offered item is provided'
      type: Property
      x-ngsi:
        model: https://schema.org/Text
    category:
      description: 'Category(ies) of the parking spot. `onStreet` : The parking spot belongs to an onStreet parking site. `offStreet` : The parking spot belongs to an offStreet parking site.'
      items:
        enum:
          - onStreet
          - offStreet
        type: string
      minItems: 1
      type: Property
      uniqueItems: true
    color:
      description: 'The color of the product'
      type: Property
      x-ngsi:
        model: https://schema.org/color
    dataProvider:
      description: 'A sequence of characters identifying the provider of the harmonised data entity.'
      type: Property
    dateCreated:
      description: 'Entity creation timestamp. This will usually be allocated by the storage platform.'
      format: date-time
      type: Property
    dateModified:
      description: 'Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.'
      format: date-time
      type: Property
    description:
      description: 'A description of this item'
      type: Property
    id:
      anyOf: &parkingspot_-_properties_-_owner_-_items_-_anyof
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Unique identifier of the entity'
      type: Property
    image:
      description: 'An image of the item'
      format: uri
      type: Property
      x-ngsi:
        model: https://schema.org/URL
    length:
      description: 'Length of the parking spot.'
      minimum: 0
      type: Property
      x-ngsi:
        model: https://schema.org/length
    location:
      $id: https://geojson.org/schema/Geometry.json
      $schema: "http://json-schema.org/draft-07/schema#"
      oneOf:
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                type: number
              minItems: 2
              type: array
            type:
              enum:
                - Point
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Point'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 2
              type: array
            type:
              enum:
                - LineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON LineString'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 4
                type: array
              type: array
            type:
              enum:
                - Polygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Polygon'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiPoint
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPoint'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiLineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiLineString'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 4
                  type: array
                type: array
              type: array
            type:
              enum:
                - MultiPolygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPolygon'
          type: object
      title: 'GeoJSON Geometry'
    name:
      description: 'The name of this item.'
      type: Property
    owner:
      description: 'A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)'
      items:
        anyOf: *parkingspot_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: Property
    refDevice:
      description: 'The device representing the physical sensor used to monitor this parking spot.'
      items:
        anyOf:
          - description: 'Property. Identifier format of any NGSI entity'
            maxLength: 256
            minLength: 1
            pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
            type: string
          - description: 'Property. Identifier format of any NGSI entity'
            format: uri
            type: string
      minItems: 1
      type: Relationship
      uniqueItems: true
    refParkingGroup:
      anyOf:
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Group to which the parking spot belongs to. For model simplification purposes only one group is allowed per parking spot.'
      type: Relationship
    refParkingSite:
      anyOf:
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Parking site to which the parking spot belongs to.'
      type: Relationship
    seeAlso:
      description: 'list of uri pointing to additional resources about the item'
      oneOf:
        - items:
            format: uri
            type: string
          minItems: 1
          type: array
        - format: uri
          type: string
      type: Property
    source:
      description: 'A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.'
      type: Property
    status:
      description: 'Status of the parking spot from the point of view of occupancy. Enum:''closed, free, occupied, unknown'''
      enum:
        - closed
        - free
        - occupied
        - unknown
      type: Property
      x-ngsi:
        model: https://schema.org/Text
    type:
      description: 'NGSI Entity type. It has to be ParkingSpot'
      enum:
        - ParkingSpot
      type: Property
    width:
      description: 'Width of the parking spot.'
      minimum: 0
      type: Property
      x-ngsi:
        model: https://schema.org/width
  required:
    - id
    - location
    - type
    - status
    - category
    - refParkingSite
  type: object
